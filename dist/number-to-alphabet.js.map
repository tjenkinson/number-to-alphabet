{"version":3,"sources":["number-to-alphabet.ts"],"names":[],"mappings":"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","file":"number-to-alphabet.js","sourceRoot":"../src","sourcesContent":["const DEfAULT_ALPHABET = [\n  'a',\n  'b',\n  'c',\n  'd',\n  'e',\n  'f',\n  'g',\n  'h',\n  'i',\n  'j',\n  'k',\n  'l',\n  'm',\n  'n',\n  'o',\n  'p',\n  'q',\n  'r',\n  's',\n  't',\n  'u',\n  'v',\n  'w',\n  'x',\n  'y',\n  'z',\n];\n\nexport class NumberToAlphabet {\n  private readonly _alphabetLength: number;\n\n  constructor(private _alphabet = DEfAULT_ALPHABET) {\n    if (_alphabet.length <= 0) {\n      throw new Error('Alphabet must contain at least 1 item.');\n    }\n    this._alphabet.forEach((letter) => {\n      if (typeof letter !== 'string' || letter.length !== 1) {\n        throw new Error('Each item in the alphabet must be a single letter.');\n      }\n    });\n    this._alphabetLength = _alphabet.length;\n  }\n\n  public numberToString(number: number): string {\n    if (typeof number !== 'number') {\n      throw new Error('Must be a nunber.');\n    }\n    if (number <= 0) {\n      throw new RangeError('Number must be > 0.');\n    }\n    let res = '';\n    let a = number - 1;\n    while (true) {\n      const remainder = a % this._alphabetLength;\n      res = this._alphabet[remainder] + res;\n      if (a < this._alphabetLength) {\n        break;\n      }\n      a = Math.floor(a / this._alphabetLength) - 1;\n    }\n    return res;\n  }\n\n  public stringToNumber(input: string): number {\n    if (!input.length) {\n      throw new Error('Input must not be empty.');\n    }\n    return input\n      .split('')\n      .reverse()\n      .reduce((acc, letter, i) => {\n        const offset = this._alphabet.indexOf(letter);\n        if (offset <= -1) {\n          throw new Error(`Letter missing from alphabet: ${letter}`);\n        }\n        return acc + (offset + 1) * Math.pow(this._alphabetLength, i);\n      }, 0);\n  }\n}\n"]}